<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="TestNG Forum" duration-ms="15818" started-at="2016-04-19T09:41:06Z" finished-at="2016-04-19T09:41:21Z">
    <groups>
    </groups>
    <test name="TestNG Test0" duration-ms="14908" started-at="2016-04-19T09:41:06Z" finished-at="2016-04-19T09:41:21Z">
      <class name="pack.login.LoginTestScript">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:[LoginTestScript passed=0 failed=0 skipped=0]]" name="beforeClass" is-config="true" duration-ms="2415" started-at="2016-04-19T15:11:06Z" finished-at="2016-04-19T15:11:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="startApp(java.lang.reflect.Method)[pri:0, instance:[LoginTestScript passed=0 failed=0 skipped=0]]" name="startApp" is-config="true" duration-ms="9675" started-at="2016-04-19T15:11:08Z" finished-at="2016-04-19T15:11:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void pack.login.LoginTestScript.registration1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startApp -->
        <test-method status="FAIL" signature="registration1()[pri:0, instance:[LoginTestScript passed=0 failed=0 skipped=0]]" name="registration1" duration-ms="604" started-at="2016-04-19T15:11:18Z" finished-at="2016-04-19T15:11:18Z">
          <exception class="java.lang.Exception">
            <full-stacktrace>
              <![CDATA[java.lang.Exception
	at pack.login.LoginTestScript.registration1(LoginTestScript.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registration1 -->
        <test-method status="PASS" signature="killServer(org.testng.ITestResult)[pri:0, instance:[LoginTestScript passed=0 failed=0 skipped=0]]" name="killServer" is-config="true" duration-ms="2044" started-at="2016-04-19T15:11:18Z" finished-at="2016-04-19T15:11:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registration1 on [LoginTestScript passed=0 failed=0 skipped=0] status=FAILURE method=LoginTestScript.registration1()[pri:0, instance:[LoginTestScript passed=0 failed=0 skipped=0]] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killServer -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:[LoginTestScript passed=0 failed=0 skipped=0]]" name="afterClass" is-config="true" duration-ms="168" started-at="2016-04-19T15:11:20Z" finished-at="2016-04-19T15:11:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- pack.login.LoginTestScript -->
    </test> <!-- TestNG Test0 -->
    <test name="TestNG Test1" duration-ms="15818" started-at="2016-04-19T09:41:06Z" finished-at="2016-04-19T09:41:21Z">
      <class name="pack.login.LoginTestScript">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:[LoginTestScript passed=0 failed=0 skipped=0]]" name="beforeClass" is-config="true" duration-ms="2415" started-at="2016-04-19T15:11:06Z" finished-at="2016-04-19T15:11:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="startApp(java.lang.reflect.Method)[pri:0, instance:[LoginTestScript passed=0 failed=0 skipped=0]]" name="startApp" is-config="true" duration-ms="9701" started-at="2016-04-19T15:11:08Z" finished-at="2016-04-19T15:11:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void pack.login.LoginTestScript.registration1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startApp -->
        <test-method status="FAIL" signature="registration1()[pri:0, instance:[LoginTestScript passed=0 failed=0 skipped=0]]" name="registration1" duration-ms="690" started-at="2016-04-19T15:11:18Z" finished-at="2016-04-19T15:11:18Z">
          <exception class="java.lang.Exception">
            <full-stacktrace>
              <![CDATA[java.lang.Exception
	at pack.login.LoginTestScript.registration1(LoginTestScript.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registration1 -->
        <test-method status="PASS" signature="killServer(org.testng.ITestResult)[pri:0, instance:[LoginTestScript passed=0 failed=0 skipped=0]]" name="killServer" is-config="true" duration-ms="2918" started-at="2016-04-19T15:11:18Z" finished-at="2016-04-19T15:11:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registration1 on [LoginTestScript passed=0 failed=0 skipped=0] status=FAILURE method=LoginTestScript.registration1()[pri:0, instance:[LoginTestScript passed=0 failed=0 skipped=0]] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killServer -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:[LoginTestScript passed=0 failed=0 skipped=0]]" name="afterClass" is-config="true" duration-ms="92" started-at="2016-04-19T15:11:21Z" finished-at="2016-04-19T15:11:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- pack.login.LoginTestScript -->
    </test> <!-- TestNG Test1 -->
  </suite> <!-- TestNG Forum -->
</testng-results>
